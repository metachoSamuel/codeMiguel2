{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Carolina/Desktop/digiClass/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class AsistenciaService {\n  constructor(http) {\n    this.http = http;\n    this.Url = 'http://localhost:3000';\n  }\n\n  extractData(res) {\n    // console.log(\"22\");\n    let body = JSON.parse('' + res); //console.log(\"23 A \" + body);\n\n    return body || {};\n  }\n\n  handleError(operation = 'operation', result) {\n    //console.log(\" ggggg \");\n    return error => {\n      console.log(`${operation} failed: ${error.message}`);\n      return of(result);\n    };\n  } //-------------------------Asistencia-------------------------\n  //Listar asistencias\n\n\n  getAsistencias() {\n    return this.http.get(this.Url + \"/asistencia\", httpOptions);\n  } //Leer\n\n\n  getAsistencia(id) {\n    return this.http.get(this.Url + \"/asistencia\" + id, httpOptions);\n  } //Crear\n\n\n  postAsistencia(data) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return _this.http.post(_this.Url + \"/asistencia\", data, httpOptions).toPromise();\n    })();\n  } //Actualizar \n\n\n  updateAsistencia(data) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this2.http.put(_this2.Url + \"/asistencia\", data, httpOptions).toPromise();\n    })();\n  }\n\n}\n\nAsistenciaService.ɵfac = function AsistenciaService_Factory(t) {\n  return new (t || AsistenciaService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nAsistenciaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AsistenciaService,\n  factory: AsistenciaService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/Carolina/Desktop/digiClass/frontend/src/app/services/asistencia.service.ts"],"names":["HttpHeaders","of","i0","i1","httpOptions","headers","AsistenciaService","constructor","http","Url","extractData","res","body","JSON","parse","handleError","operation","result","error","console","log","message","getAsistencias","get","getAsistencia","id","postAsistencia","data","post","toPromise","updateAsistencia","put","ɵfac","AsistenciaService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,WAAT,QAA4B,sBAA5B;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,OAAO,EAAE,IAAIL,WAAJ,CAAgB;AAAE,oBAAgB;AAAlB,GAAhB;AADO,CAApB;AAGA,OAAO,MAAMM,iBAAN,CAAwB;AAC3BC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,GAAL,GAAW,uBAAX;AACH;;AACDC,EAAAA,WAAW,CAACC,GAAD,EAAM;AACb;AACA,QAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKH,GAAhB,CAAX,CAFa,CAGb;;AACA,WAAOC,IAAI,IAAI,EAAf;AACH;;AACDG,EAAAA,WAAW,CAACC,SAAS,GAAG,WAAb,EAA0BC,MAA1B,EAAkC;AACzC;AACA,WAAQC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAEJ,SAAU,YAAWE,KAAK,CAACG,OAAQ,EAAlD;AACA,aAAOpB,EAAE,CAACgB,MAAD,CAAT;AACH,KAHD;AAIH,GAjB0B,CAkB3B;AACA;;;AACAK,EAAAA,cAAc,GAAG;AACb,WAAO,KAAKd,IAAL,CAAUe,GAAV,CAAc,KAAKd,GAAL,GAAW,aAAzB,EAAwCL,WAAxC,CAAP;AACH,GAtB0B,CAuB3B;;;AACAoB,EAAAA,aAAa,CAACC,EAAD,EAAK;AACd,WAAO,KAAKjB,IAAL,CAAUe,GAAV,CAAc,KAAKd,GAAL,GAAW,aAAX,GAA2BgB,EAAzC,EAA6CrB,WAA7C,CAAP;AACH,GA1B0B,CA2B3B;;;AACMsB,EAAAA,cAAc,CAACC,IAAD,EAAO;AAAA;;AAAA;AACvB,aAAO,KAAI,CAACnB,IAAL,CAAUoB,IAAV,CAAe,KAAI,CAACnB,GAAL,GAAW,aAA1B,EAAyCkB,IAAzC,EAA+CvB,WAA/C,EAA4DyB,SAA5D,EAAP;AADuB;AAE1B,GA9B0B,CA+B3B;;;AACMC,EAAAA,gBAAgB,CAACH,IAAD,EAAO;AAAA;;AAAA;AACzB,aAAO,MAAI,CAACnB,IAAL,CAAUuB,GAAV,CAAc,MAAI,CAACtB,GAAL,GAAW,aAAzB,EAAwCkB,IAAxC,EAA8CvB,WAA9C,EAA2DyB,SAA3D,EAAP;AADyB;AAE5B;;AAlC0B;;AAoC/BvB,iBAAiB,CAAC0B,IAAlB,GAAyB,SAASC,yBAAT,CAAmCC,CAAnC,EAAsC;AAAE,SAAO,KAAKA,CAAC,IAAI5B,iBAAV,EAA6BJ,EAAE,CAACiC,QAAH,CAAYhC,EAAE,CAACiC,UAAf,CAA7B,CAAP;AAAkE,CAAnI;;AACA9B,iBAAiB,CAAC+B,KAAlB,GAA0B,aAAcnC,EAAE,CAACoC,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEjC,iBAAT;AAA4BkC,EAAAA,OAAO,EAAElC,iBAAiB,CAAC0B,IAAvD;AAA6DS,EAAAA,UAAU,EAAE;AAAzE,CAAtB,CAAxC","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\r\nimport { of } from 'rxjs';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\nexport class AsistenciaService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.Url = 'http://localhost:3000';\r\n    }\r\n    extractData(res) {\r\n        // console.log(\"22\");\r\n        let body = JSON.parse('' + res);\r\n        //console.log(\"23 A \" + body);\r\n        return body || {};\r\n    }\r\n    handleError(operation = 'operation', result) {\r\n        //console.log(\" ggggg \");\r\n        return (error) => {\r\n            console.log(`${operation} failed: ${error.message}`);\r\n            return of(result);\r\n        };\r\n    }\r\n    //-------------------------Asistencia-------------------------\r\n    //Listar asistencias\r\n    getAsistencias() {\r\n        return this.http.get(this.Url + \"/asistencia\", httpOptions);\r\n    }\r\n    //Leer\r\n    getAsistencia(id) {\r\n        return this.http.get(this.Url + \"/asistencia\" + id, httpOptions);\r\n    }\r\n    //Crear\r\n    async postAsistencia(data) {\r\n        return this.http.post(this.Url + \"/asistencia\", data, httpOptions).toPromise();\r\n    }\r\n    //Actualizar \r\n    async updateAsistencia(data) {\r\n        return this.http.put(this.Url + \"/asistencia\", data, httpOptions).toPromise();\r\n    }\r\n}\r\nAsistenciaService.ɵfac = function AsistenciaService_Factory(t) { return new (t || AsistenciaService)(i0.ɵɵinject(i1.HttpClient)); };\r\nAsistenciaService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AsistenciaService, factory: AsistenciaService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}